# ORIGINAL SARConfig class when I obtained it from Akshay
class SARConfig:
    # train_regime = 'fixed'  # 'fixed' vs 'online'                             
    # criterion = 'l1'        # 'l1' vs 'mse' vs 'smoothl1'                             ## using argparse
    # use_gpu = True                                                                    ## using argparse
    # verbose = True          # True to print messages during training                  ## switching verbosity on by default
    # save_training_plot = True                                                         ## replacing this functionality with tensorboard
    # print_every = 1000      # iteration interval between printing                     ## using argparse
    # save_every = 20         # epoch interval between saving                           ## using argparse
    # learning_rate = 5e-4                                                              ## using argparse
    # batch_size = 10                                                                   ## using argparse
    # max_epochs = 200        # number of epochs to train for                           ## using argparse
    # iters_per_epoch = 1000  # number of iterations to an epoch used in 'online' case  ## not really bothering about getting online data generation working - offline data generation suffices and fits better with how I've written my code
    # lr_schedule = True                                                                ## using argparse
    # lr_schedule_gamma = 0.5                                                           ## using argparse
    # lr_schedule_interval = 20                                                         ## using argparse
    # save_dir = 'models/train_50'                                                      ## using argparse
    # figure_dir = 'figures/train_50'                                                   ## replacing this functionality with tensorboard
    # template_path = 'data/SimTxPulse.mat'                                             ## defined in data.py
    # trainset_path = 'data/sar_dataset_50_max_sparse_50_clustered.pkl'                 ## handle  in data.py - originally commented if a dataset already exists
    # trainset_size = 50000                                                             ## defined in data.py
    # dim=1000                                                                          ## defined in data.py
    # max_sparse=50                                                                     ## defined in data.py
    # sparsity_pattern='block'                                                          ## defined in data.py
    # support_dist='block-rootdec'                                                      ## defined in data.py
    # scale=0.1                                                                         ## defined in create_data.py
    # num_clusters=3                                                                    ## defined in create_data.py
    # normalize_signals='l2'                                                            ## defined in create_data.py
    save_repr_plots=True
    test_plot_dir='figures/train_50/UNet_fixed_l1_maxnorm_maxsparse50_new_freq'

# class SARConfig:
#     train_regime = 'fixed'  # 'fixed' vs 'online'
#     criterion = 'l1'        # 'l1' vs 'mse' vs 'smoothl1'
#     use_gpu = True
#     verbose = True          # True to print messages during training
#     save_training_plot = True
#     print_every = 1000      # iteration interval between printing
#     # save_every = 20         # epoch interval between saving
#     save_every = 5          # Arun: Reduced this for debugging purposes 
#     # learning_rate = 5e-4  # Arun: 1e-4 usually works well, and is the Adam default, so changing it to that...
#     learning_rate = 1e-4
#     batch_size = 10
#     max_epochs = 200        # number of epochs to train for
#     iters_per_epoch = 1000  # number of iterations to an epoch used in 'online' case
#     lr_schedule = True
#     lr_schedule_gamma = 0.5
#     lr_schedule_interval = 20
#     save_dir = 'models/train_50_20200904' # TODO
#     figure_dir = 'figures/train_50_20200904' # TODO
#     template_path = 'data/SimTxPulse.mat' 
#     trainset_path = 'data/sar_dataset_50_max_sparse_10_uniform.pkl' # TODO
#     trainset_size = 50000
#     dim=1000
#     max_sparse=10 # TODO
#     sparsity_pattern='block'
#     support_dist='block-rootdec'
#     scale=0.1
#     num_clusters=3
#     normalize_signals='l2'
#     save_repr_plots=True
#     # test_plot_dir='figures/train_50/UNet_fixed_l1_maxnorm_maxsparse50_new_freq'
#     test_plot_dir='figures/train_50_20200904/UNet_fixed_l1_l2norm_maxsparse10_new_freq' # TODO 